/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbank;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author CORE
 */
public class Donors extends javax.swing.JFrame {
String getTime = "",getDate = "";
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int cycle = 1;
    Object cols[];
    String fname = "";
    String mname = "";
    String lname = "";
    String donorsID = "";
    String getAplus = "";
    String getAneg = "";
    String getBplus = "";
    String getBneg = "";
    String getABplus = "";
    String getABneg = "";
    String getOplus = "";
    String getOneg = "";
    int StockInc = 1;

    /**
     * Creates new form Main
     */
    public Donors() {
        initComponents();
        DonorsTable();
        lblSelectedRowDonorID.setVisible(false);
        jLabel3.setText("Login As: " + getDetails.fName + " " + getDetails.lName);
        check();
    }

    void check() {
        if (getDetails.userType.equals("Admin")) {
            jButton3.setEnabled(true);
        } else {

            jButton3.setEnabled(false);
        }
    }

    public void DonorsTable() {
        conn = SQLCon.ConnectDB();
        String sql = "select d .donorsID as 'Donors ID',concat(d.fName, ' ',d.mName, ' ',d.lName) as 'Name',d.bloodType as 'Blood Type', dc.contactNo as 'Contact No' from donors d\n"
                + "inner join donors_contacts dc\n"
                + "on d.donorsID=dc.donorsID";
        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    void insertDonorsReport(){
    conn = SQLCon.ConnectDB();
    
    try{
        String sql = "insert into donorsReport (userID,action,donorsID,date,time) values (?,?,?,?,?)";
        pst = conn.prepareStatement(sql);
        pst.setInt(1, getDetails.userid);
        pst.setString(2, "DELETE A DONOR");
        pst.setString(3, getDetails.selectedDonors);
        getDate();
        getTime();
        pst.setString(4, getDate);
        pst.setString(5, getTime);
        pst.executeUpdate();
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
}

void getDate(){
Date d = new Date();
SimpleDateFormat s = new SimpleDateFormat("MM-dd-yyyy");
getDate = s.format(d);
}
void getTime(){
Date d = new Date();
SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
getTime = s.format(d);
}

    /*
    void filterByDate(){
        conn=SQLCon.ConnectDB();
        String sql = "select d .donorsID as 'Donors ID',concat(d.fName, ' ',d.mName, ' ',d.lName) as 'Name',d.bloodType as 'Blood Type', dc.contactNo as 'Contact No' from donors d\n" +
"inner join donors_contacts dc\n" +
"on d.donorsID=dc.donorsID where d.donateDate between '"+((JTextField)jTextField3.getDateEditor().getUiComponent()).getText()+"' and '"+((JTextField)jTextField3.getDateEditor().getUiComponent()).getText()+"'";
        try{
            pst=conn.prepareStatement(sql); 
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lblSelectedRowDonorID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Blood Bank");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("DONORS LIST");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(60, 0, 270, 40);

        lblSelectedRowDonorID.setText("DonorID");
        jPanel1.add(lblSelectedRowDonorID);
        lblSelectedRowDonorID.setBounds(620, 20, 50, 14);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bloodbank/image/backbutton.png"))); // NOI18N
        jLabel2.setToolTipText("Back to Main Menu");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 50, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(454, 0, 250, 40);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filter by", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel3.setLayout(null);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blood Type", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1);
        jComboBox1.setBounds(30, 20, 140, 30);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(470, 10, 190, 60);

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel2.add(txtSearch);
        txtSearch.setBounds(140, 30, 320, 23);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Search:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(70, 30, 60, 20);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 660, 270);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("ADD DONOR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(70, 350, 150, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("UPDATE DONOR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(230, 350, 150, 30);

        jButton3.setBackground(new java.awt.Color(255, 153, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("DELETE DONOR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(470, 350, 150, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new DonorsInformation().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(row) == true) {
           new UpdateDonors().setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Select Donor you want to Update", "Blood Bank", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(row) == true) {
            int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure You want Delete this Donor?", "Blood Bank", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (selectedOption == JOptionPane.YES_OPTION) {
                String del = getDetails.selectedDonors;
                String deleteFK = "DELETE FROM donors_contacts WHERE donorsID='" + del + "'";
                String Sql = "DELETE FROM donors WHERE donorsID='" + del + "'";
                Connection conn = SQLCon.ConnectDB();
                  try {
                    pst = conn.prepareStatement(deleteFK);
                    pst.executeUpdate(); 
                    try {
                    pst = conn.prepareStatement(Sql);
                    pst.executeUpdate();
                    insertDonorsReport();
                    DonorsTable();
                    conn.close();
                    JOptionPane.showMessageDialog(null, "Donor Successfully Deleted.", "Blood Bank", JOptionPane.INFORMATION_MESSAGE);
                    
                } catch (Exception e) {
                     JOptionPane.showMessageDialog(null, e);
                }
                  } catch (Exception e) {
                     JOptionPane.showMessageDialog(null, e);
                }
                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select Donee you want to Delete", "Blood Bank", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if (txtSearch.getText().equals("")) {
            DonorsTable();
        } else {
            conn = SQLCon.ConnectDB();
            String getInfo = txtSearch.getText();
            try {
                String sql = "select u.donorsID as 'Donors ID',concat(u.fName, ' ',u.mName, ' ',u.lName) as Name,u.bloodType as 'Blood Type',pi.contactNo as 'Contact No' from donors u\n"
                        + "inner join donors_contacts pi\n"
                        + "on u.donorsID=pi.donorsID\n"
                        + "where u.donorsID LIKE '%" + getInfo + "%'\n"
                        + "or u.fName LIKE '%" + getInfo + "%'  \n"
                        + "or u.mName LIKE '%" + getInfo + "%'  \n"
                        + "or u.lName LIKE '%" + getInfo + "%' ";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem().equals("Blood Type")) {
            DonorsTable();
        } else {

            conn = SQLCon.ConnectDB();
            String getInfo = (String) jComboBox1.getSelectedItem();
            String sql = "select d .donorsID as 'Donors ID',concat(d.fName, ' ',d.mName, ' ',d.lName) as 'Name',d.bloodType as 'Blood Type', dc.contactNo as 'Contact No' from donors d\n"
                    + "inner join donors_contacts dc\n"
                    + "on d.donorsID=dc.donorsID where d.bloodType='" + getInfo + "'";
            try {
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        lblSelectedRowDonorID.setText(null);
        int column = 0;
        int row = jTable1.getSelectedRow();
        String value = jTable1.getModel().getValueAt(row, column).toString();
        getDetails.selectedDonors = value;
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        new MainForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Donors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Donors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Donors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Donors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Donors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblSelectedRowDonorID;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
